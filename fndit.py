import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import math

# --- Fun√ß√µes de C√°lculo ---

def calcular_parcela_price(valor_financiamento, taxa_juros_mensal, num_parcelas):
    """Calcula a parcela fixa do sistema Price."""
    if taxa_juros_mensal == 0:
        return valor_financiamento / num_parcelas
    
    # Ajuste para a f√≥rmula de juros compostos para evitar n√∫meros muito pequenos
    # Para taxas muito pequenas, (1 + i)^-n pode ser 1, levando a divis√£o por zero.
    # √â melhor tratar isso como zero juros ou uma aproxima√ß√£o.
    # Usando o limite da s√©rie:
    # Se i for muito pequeno, (1+i)^-n ~ 1 - n*i
    # 1 - (1+i)^-n ~ n*i
    # P = (V * i) / (n * i) = V / n
    
    try:
        denominador = 1 - (1 + taxa_juros_mensal)**(-num_parcelas)
        if denominador == 0: # Caso a taxa seja t√£o pequena que a exponencia√ß√£o se aproxime de 1
            return valor_financiamento / num_parcelas
        return (valor_financiamento * taxa_juros_mensal) / denominador
    except OverflowError: # Para n√∫meros muito grandes/pequenos
        return float('inf') # Retorna infinito se o c√°lculo for invi√°vel

def calcular_vpl(fluxos_caixa, taxa_desconto_mensal):
    """Calcula o Valor Presente L√≠quido (VPL) de uma s√©rie de fluxos de caixa."""
    vpl = 0
    for t, fluxo in enumerate(fluxos_caixa):
        vpl += fluxo / ((1 + taxa_desconto_mensal)**t)
    return vpl

# --- Configura√ß√µes da P√°gina Streamlit ---
st.set_page_config(layout="wide", page_title="Simulador de Fomento √† Descarboniza√ß√£o (FNDIT)")

st.title("üå± Simulador de Pol√≠tica P√∫blica de Fomento √† Descarboniza√ß√£o")
st.markdown("""
Esta ferramenta permite simular o impacto de diferentes estrat√©gias de aloca√ß√£o de recursos do FNDIT
em projetos de descarboniza√ß√£o, considerando a elasticidade da demanda por cr√©dito.
""")

st.sidebar.header("Par√¢metros do Projeto e do FNDIT")

# --- Par√¢metros de Entrada ---
valor_projeto = st.sidebar.slider("1. Valor do Projeto de Descarboniza√ß√£o (R$)", 
                                  min_value=10_000_000, max_value=100_000_000, 
                                  value=30_000_000, step=5_000_000)
taxa_juros_full_anual = st.sidebar.slider("2. Taxa de Juros Full (a.a. %) - Mercado", 
                                          min_value=5.0, max_value=15.0, 
                                          value=7.8, step=0.1) / 100
montante_fndit = st.sidebar.slider("3. Montante no FNDIT para Subs√≠dios/Cr√©dito (R$)", 
                                   min_value=50_000_000, max_value=1_000_000_000, 
                                   value=200_000_000, step=50_000_000)
prazo_anos = st.sidebar.slider("4. Prazo para Amortiza√ß√£o (anos)", 
                               min_value=1, max_value=15, 
                               value=5, step=1)
taxa_juros_subsidio_anual = st.sidebar.slider("Taxa de Juros Subsidiada Alvo (a.a. %)", 
                                               min_value=0.5, max_value=7.0, 
                                               value=3.0, step=0.1) / 100
elasticidade_demanda = st.sidebar.slider("Elasticidade da Demanda por Cr√©dito de Descarboniza√ß√£o", 
                                         min_value=-3.0, max_value=-0.5, 
                                         value=-1.5, step=0.1)
# Novas vari√°veis para indicadores adicionais
reducao_co2e_por_projeto_ton = st.sidebar.number_input("Redu√ß√£o de CO2e por projeto (toneladas/ano)", 
                                                         min_value=1000, max_value=100000, 
                                                         value=10000, step=1000)
taxa_desconto_tomador_anual = st.sidebar.slider("Taxa de Desconto para VPL (Tomador) a.a. (%)",
                                                min_value=8.0, max_value=20.0,
                                                value=12.0, step=0.5) / 100

# --- Convers√µes ---
prazo_meses = prazo_anos * 12
taxa_juros_full_mensal = (1 + taxa_juros_full_anual)**(1/12) - 1
taxa_juros_subsidio_mensal = (1 + taxa_juros_subsidio_anual)**(1/12) - 1
taxa_desconto_tomador_mensal = (1 + taxa_desconto_tomador_anual)**(1/12) - 1

# --- C√°lculos dos Cen√°rios ---

st.header("Resultados da Simula√ß√£o")

col1, col2, col3 = st.columns(3)

# --- Cen√°rio 1: Cr√©dito com Juros Full ---
with col1:
    st.subheader("Cen√°rio 1: Cr√©dito com Juros Full")
    qtd_projetos_credito_full = montante_fndit // valor_projeto
    st.metric("Projetos Financi√°veis (Capacidade FNDIT)", f"{int(qtd_projetos_credito_full)}")

    parcela_full = calcular_parcela_price(valor_projeto, taxa_juros_full_mensal, prazo_meses)
    custo_total_full = parcela_full * prazo_meses
    juros_total_full = custo_total_full - valor_projeto
    st.markdown(f"**Detalhes por Projeto (Juros Full):**")
    st.markdown(f"- Parcela Mensal: R$ {parcela_full:,.2f}")
    st.markdown(f"- Custo Total Financiamento: R$ {custo_total_full:,.2f}")
    st.markdown(f"- Juros Totais Pagos: R$ {juros_total_full:,.2f}")

    # VPL para o Tomador (cen√°rio sem subs√≠dio - custo)
    fluxos_tomador_full = [-parcela_full] * prazo_meses
    fluxos_tomador_full[0] += valor_projeto # Recebe o valor no in√≠cio
    vpl_tomador_full = calcular_vpl(fluxos_tomador_full, taxa_desconto_tomador_mensal)
    st.markdown(f"- VPL para o Tomador (Juros Full): R$ {vpl_tomador_full:,.2f}")
    st.markdown(f"*(VPL inicial do financiamento. Representa o custo financeiro l√≠quido para o tomador)*")


# --- Cen√°rio 2: Subs√≠dio de Juros (7,8% para 3%) ---
with col2:
    st.subheader("Cen√°rio 2: Subs√≠dio de Juros")

    parcela_subsidio = calcular_parcela_price(valor_projeto, taxa_juros_subsidio_mensal, prazo_meses)
    custo_total_subsidio = parcela_subsidio * prazo_meses
    
    juros_total_subsidio = custo_total_subsidio - valor_projeto
    subs_por_projeto = (parcela_full - parcela_subsidio) * prazo_meses
    
    qtd_projetos_capacidade_fndit = montante_fndit // subs_por_projeto if subs_por_projeto > 0 else float('inf')
    st.metric("Projetos Financi√°veis (Capacidade FNDIT)", f"{int(qtd_projetos_capacidade_fndit)}")

    st.markdown(f"**Detalhes por Projeto (Juros Subsidiados):**")
    st.markdown(f"- Parcela Mensal: R$ {parcela_subsidio:,.2f}")
    st.markdown(f"- Custo Total Financiamento: R$ {custo_total_subsidio:,.2f}")
    st.markdown(f"- Juros Totais Pagos: R$ {juros_total_subsidio:,.2f}")
    st.markdown(f"- **Subs√≠dio FNDIT por Projeto: R$ {subs_por_projeto:,.2f}**")

    # VPL para o Tomador (cen√°rio subsidiado - benef√≠cio)
    fluxos_tomador_subsidio = [-parcela_subsidio] * prazo_meses
    fluxos_tomador_subsidio[0] += valor_projeto
    vpl_tomador_subsidio = calcular_vpl(fluxos_tomador_subsidio, taxa_desconto_tomador_mensal)
    st.markdown(f"- VPL para o Tomador (Juros Subsidiados): R$ {vpl_tomador_subsidio:,.2f}")


    st.markdown("---")
    st.markdown("**Com Elasticidade da Demanda:**")
    
    # Calcular % de varia√ß√£o nos juros
    # Ajuste: A base √© a taxa full, o "pre√ßo" que diminui.
    variacao_juros_percentual = (taxa_juros_subsidio_anual - taxa_juros_full_anual) / taxa_juros_full_anual
    
    # Usando 6 projetos como a "demanda base" para juros full, como na discuss√£o
    demanda_base_full = qtd_projetos_credito_full # N√∫mero de projetos que o FNDIT financiaria a juros full
    
    # Calcular aumento percentual na demanda
    aumento_demanda_percentual = elasticidade_demanda * variacao_juros_percentual
    
    qtd_projetos_demandados_elasticidade = demanda_base_full * (1 + aumento_demanda_percentual)
    
    st.metric("Projetos Demandados (Elasticidade)", f"{int(qtd_projetos_demandados_elasticidade)}")
    st.markdown(f"*(Assumindo {int(demanda_base_full)} projetos como demanda base a juros full)*")
    st.markdown(f"*(Aumento de demanda de: {aumento_demanda_percentual:.2%})*")

    st.markdown(f"**Conclus√£o Elasticidade:** O FNDIT pode subsidiar at√© {int(qtd_projetos_capacidade_fndit)} projetos, mas a demanda estimada √© de {int(qtd_projetos_demandados_elasticidade)} projetos. Isso sugere que a demanda de mercado √© o fator limitante neste cen√°rio.")


# --- Cen√°rio 3: Subven√ß√£o Total do Projeto ---
with col3:
    st.subheader("Cen√°rio 3: Subven√ß√£o Total")
    qtd_projetos_subvencao = montante_fndit // valor_projeto
    st.metric("Projetos Financi√°veis (Capacidade FNDIT)", f"{int(qtd_projetos_subvencao)}")
    st.markdown(f"**Detalhes por Projeto (Subven√ß√£o Total):**")
    st.markdown(f"- Valor da Subven√ß√£o: R$ {valor_projeto:,.2f}")
    st.markdown(f"*(N√£o h√° parcelas ou juros, pois o valor √© doado)*")
    st.markdown(f"- VPL para o Tomador (Subven√ß√£o): R$ {valor_projeto:,.2f}") # VPL √© o valor recebido


st.markdown("---")

st.header("An√°lise Comparativa e Indicadores de Impacto")

col_ind1, col_ind2, col_ind3 = st.columns(3)

# Custo de Subs√≠dio por Projeto
with col_ind1:
    if subs_por_projeto > 0:
        st.subheader("Custo de Subs√≠dio por Projeto (FNDIT)")
        st.metric("Subs√≠dio de Juros", f"R$ {subs_por_projeto:,.2f}")
        st.markdown("*(Este √© o valor que o FNDIT gasta por projeto para reduzir os juros para o tomador)*")
    else:
        st.warning("Subs√≠dio de Juros n√£o calcul√°vel (taxa subsidiada muito alta ou igual √† full).")

# Custo por Tonelada de CO2e Evitada (Estimado)
with col_ind2:
    st.subheader("Custo por Tonelada de CO2e Evitada")
    # Para fins de simula√ß√£o, vamos usar o valor do projeto como o "custo" para essa m√©trica,
    # embora na pr√°tica o custo do subs√≠dio seja o mais relevante para a pol√≠tica p√∫blica.
    # No cen√°rio de subs√≠dio, o custo para o FNDIT √© o subs√≠dio.
    if reducao_co2e_por_projeto_ton > 0:
        custo_ton_co2e_subsidio = subs_por_projeto / reducao_co2e_por_projeto_ton
        st.metric("Custo Subs√≠dio/ton CO2e (Juros Subsid.)", f"R$ {custo_ton_co2e_subsidio:,.2f}")
        
        # Para subven√ß√£o total, o custo √© o valor do projeto
        custo_ton_co2e_subvencao = valor_projeto / reducao_co2e_por_projeto_ton
        st.metric("Custo Subven√ß√£o/ton CO2e (Subven√ß√£o Total)", f"R$ {custo_ton_co2e_subvencao:,.2f}")
    else:
        st.warning("Redu√ß√£o de CO2e por projeto deve ser maior que zero.")


# Alavancagem de Capital Privado (para o cen√°rio de subs√≠dio de juros)
with col_ind3:
    st.subheader("Alavancagem de Capital Privado")
    # No cen√°rio de subs√≠dio de juros, o tomador ainda financia R$30M. O FNDIT "subsidiia" uma parte.
    # A alavancagem pode ser vista como o capital privado mobilizado pelo subs√≠dio do FNDIT.
    # Aqui, cada projeto de 30M que √© financiado com subs√≠dio, mobiliza 30M de capital privado.
    # A alavancagem √© ent√£o o valor do projeto dividido pelo subs√≠dio do FNDIT.
    if subs_por_projeto > 0:
        alavancagem_subs = valor_projeto / subs_por_projeto
        st.metric("Alavancagem (Subs√≠dio de Juros)", f"{alavancagem_subs:,.2f}x")
        st.markdown(f"*(Cada R$1 do FNDIT em subs√≠dio atrai R${alavancagem_subs:,.2f} de capital privado para o projeto)*")
    else:
        st.info("N√£o aplic√°vel ou calcul√°vel para Alavancagem com Subs√≠dio de Juros.")
    
    # Para subven√ß√£o total, a alavancagem √© 0 ou indefinida, pois o FNDIT cobre tudo.
    st.metric("Alavancagem (Subven√ß√£o Total)", "N√£o aplic√°vel (1:1)")
    st.markdown("*(Subven√ß√£o total n√£o alavanca capital privado, pois o FNDIT cobre 100%)*")


st.markdown("---")

# --- Gr√°fico de Compara√ß√£o de Projetos ---
st.header("Comparativo de Quantidade de Projetos")

data = {
    'Cen√°rio': ['1. Cr√©dito Full', '2. Subs√≠dio Juros (Capac. FNDIT)', '2. Subs√≠dio Juros (Demanda)', '3. Subven√ß√£o Total'],
    'Projetos Financi√°veis': [
        qtd_projetos_credito_full,
        qtd_projetos_capacidade_fndit,
        qtd_projetos_demandados_elasticidade,
        qtd_projetos_subvencao
    ]
}
df_projetos = pd.DataFrame(data)

fig, ax = plt.subplots(figsize=(10, 6))
bars = ax.bar(df_projetos['Cen√°rio'], df_projetos['Projetos Financi√°veis'], color=['skyblue', 'lightgreen', 'salmon', 'gold'])
ax.set_ylabel("Quantidade de Projetos")
ax.set_title("Projetos Financiados por Cen√°rio")
plt.xticks(rotation=15, ha='right')

# Adicionar o n√∫mero em cima de cada barra
for bar in bars:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2, yval + 0.5, round(yval), ha='center', va='bottom', fontsize=10)

plt.tight_layout()
st.pyplot(fig)

st.markdown("---")
st.subheader("Considera√ß√µes Adicionais para a Pol√≠tica P√∫blica:")
st.markdown("""
* **Qual o objetivo principal?** Maximizar o n√∫mero de projetos? Maximizar a redu√ß√£o de CO2e? Alavancar mais capital privado? Estimular inova√ß√£o? A resposta a isso define a "melhor" estrat√©gia.
* **An√°lise de Sensibilidade:** Explore diferentes valores para a Elasticidade da Demanda. Como os resultados mudam se a demanda for mais ou menos sens√≠vel aos juros?
* **Barreiras n√£o-financeiras:** Al√©m dos juros, quais outras barreiras (conhecimento t√©cnico, burocracia, acesso √† tecnologia) podem estar limitando a demanda por projetos de descarboniza√ß√£o? O FNDIT pode atuar nesses pontos.
* **Monitoramento e Avalia√ß√£o:** Implementar um sistema robusto para monitorar o impacto real dos projetos financiados em termos de descarboniza√ß√£o, gera√ß√£o de valor e retorno financeiro.
* **Estruturas H√≠bridas:** Considere misturar as estrat√©gias. Por exemplo, uma pequena subven√ß√£o inicial (seed money) combinada com cr√©dito subsidiado para o restante do projeto.
""")